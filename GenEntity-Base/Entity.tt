<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#@ include file="Manager.ttinclude" #>

<#
    string baseNamespaceName="MES.Server.Manufacture"; //基础名称空间
    string entityNamespaceName="Domain.Entity"; //实体名称空间
    string repositoryNamespaceName="Infrastruct.Repository"; //仓储名称空间
    string iRepositoryNamespaceName="Domain.IRepository"; //仓储接口名称空间
    string tableDesc="测试表";
    string tableName="t_pd_wo_issue_material";
    string entityFileName="WorkorderIssueMaterial"; //实体基本名称
    string entityName=entityFileName+"Entity"; //实体文件名称
    string repositoryName=entityFileName+"Repository"; //仓储名称
    string iRepositoryName="I"+repositoryName; //仓储基类

    var manager = Manager.Create(Host, GenerationEnvironment);

    bool isBaseRepository=true; //是否生成基础仓储模型

    manager.StartNewFile(entityName + ".cs","Entities");
#>
using MES.Server.Domain.Entity;
using SqlSugar;

namespace  <#= baseNamespaceName #>.<#= entityNamespaceName #>
{
    /// <summary>
    /// <#= tableDesc #>
    /// </summary>
    [SugarTable("<#= tableName #>")]
    public class <#= entityName #> : CommonEntity
    {

    }
}

<#
    manager.EndBlock();
    manager.StartNewFile(repositoryName + ".cs","Repository");
#>
using System.Collections.Generic;
using MES.Server.Infrastruct.Repository;
using MES.Server.Infrastruct.UnitOfWork;
using MES.Server.Infrastruct.ServiceExtension.Authentication;
using SqlSugar;

namespace <#= baseNamespaceName #>.<#= repositoryNamespaceName #>
{
 /// <summary>
 /// <#= tableDesc #>
 /// </summary>
 <#
    if(isBaseRepository){
 #>
     public class <#= repositoryName #> : BaseRepository<<#= entityName #>>, <#= iRepositoryName #>
 <#
     }
    else{
 #>
     public class <#= repositoryName #> : BaseRepositoryExtension, <#= iRepositoryName #>
 <#
     }
 #>
 public class <#= repositoryName #> : BaseRepositoryExtension, <#= iRepositoryName #>
    {
        public <#= repositoryName #> (IUnitOfWork unitOfWork) : base(unitOfWork)
        {
        }
    }
}



<#
manager.EndBlock();
manager.StartNewFile(iRepositoryName + ".cs","Repository");
#>
namespace <#= baseNamespaceName #>.<#= iRepositoryNamespaceName #>
{
     /// <summary>
     /// <#= tableDesc #>
     /// </summary>
    public interface <#= iRepositoryName #>
    {
    }
}

<#
manager.EndBlock();
manager.Process(true);
#>
