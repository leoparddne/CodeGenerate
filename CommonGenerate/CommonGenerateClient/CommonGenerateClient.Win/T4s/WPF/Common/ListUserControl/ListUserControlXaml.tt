<#@ template debug="false" hostspecific="true" language="C#" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ assembly name="Utility.dll" #>
<#@ import namespace="CommonGenerateClient.Resource.Models.WebAPI" #>
<#@ import namespace="Utility.DB" #>
<#@ import namespace="Utility.Common" #>
<#
    //System.Diagnostics.Debugger.Launch();

    string modelConfigStr=Host.ResolveParameterValue(null, null, "ParameterName");
    //string testParameter=Host.ResolveParameterValue(null, null, "TestParameterName");
    //modelConfigStr=System.Web.HttpUtility.UrlDecode(modelConfigStr);


    modelConfigStr=modelConfigStr.Replace(@"\\",@"\").Replace("\"","");

    var pathByte=Convert.FromBase64String(modelConfigStr);
    modelConfigStr=System.Text.Encoding.UTF8.GetString(pathByte);

    string json= File.ReadAllText(modelConfigStr);
    var allModel=JsonConvert.DeserializeObject<Dictionary<string, InfrastructModel>>(json);


    InfrastructModel dataConfig=allModel["ParameterName"];

    GenerateEx ex=new GenerateEx(dataConfig.Config.DBType);
    var entityFieldStr = ex.GenerateTable( dataConfig.Config.Columns, true, false);
    var dtoFieldStr = ex.GenerateTable( dataConfig.Config.Columns, false, false,true);
    var dtoFieldWithoutPrimaryKeyStr = ex.GenerateTable( dataConfig.Config.Columns, false, false,true,true);

    string baseNamespaceName="MES.Server."+dataConfig.Config.BaseNamespaceName; //基础名称空间
    

    string entityNamespace= baseNamespaceName+".Domain.Entity"; //实体名称空间
    string repositoryNamespaceName = baseNamespaceName+".Infrastruct.Repository"; //仓储名称空间
    string iRepositoryNamespaceName = baseNamespaceName+".Domain.IRepository"; //仓储接口名称空间
    string serviceNamespaceName = baseNamespaceName+".Application.Service"; //服务名称空间
    string iServiceNameSpaceName = baseNamespaceName+".Application.IService"; //服务接口名称空间
    string controllerNameSpaceName = baseNamespaceName+".Controllers";//控制器名称空间
    string dtoInNameSpaceName = baseNamespaceName+".Domain.Dto.InDto";//dto名称空间
    string dtoOutNameSpaceName = baseNamespaceName+".Domain.Dto.OutDto";//dto名称空间


    bool isBaseRepository=true; //是否生成基础仓储模型

    string tableDesc= dataConfig.Config.TableDesc??"";//数据库注释
    string tableName= dataConfig.Config.TableName;//数据库表名称
    string entityFileName=dataConfig.Config.EntityName; //实体基本名称


    string entityName=entityFileName+"Entity"; //实体文件名称
    string repositoryName=entityFileName+"Repository"; //仓储名称
    string iRepositoryName="I"+repositoryName; //仓储基类
    string serviceName= entityFileName+"Service"; //服务名称
    string serviceParameter=Char.ToLower(serviceName[0])+ serviceName.Substring(1);//service参数名称


    string iServiceName="I"+serviceName; //服务接口名称
    string controllerName= entityFileName+"Controller";//控制器名称
    string inDtoName= entityFileName + "InDto";
    string searchInDtoName=entityFileName+"SearchInDto"; //动态查询
    string searchOutDtoName=entityFileName+"SearchOutDto"; //动态查询
    string createInDtoName=entityFileName+"CreateInDto"; //创建(不包含主键字段)

    string fileTitle=@$"
// *
// * 此代码由生成工具生成
// * 工具版本:V1.0.0.0
// * 文件版本:V1.0.0.0
// * Date:{DateTime.Now.ToString("yyyy:MM:dd HH:mm:ss")}
// *
";


    string primaryKeyName=ex.GetPrimaryKeyName(dataConfig.Config.Columns);

    string savePath=dataConfig.Config.SavePath;

    //var manager = Manager.Create(Host, GenerationEnvironment);


    //manager.StartNewFile(entityName + ".cs",savePath + "/WebAPI/Entities");
#>
<comm:UserControlExt xmlns:comm="clr-namespace:MES.Client.UICommon.Comm;assembly=MES.Client.UICommon"
                     x:Class="MES.Client.BaseData.UserControls.<#= entityFileName #>List"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                     xmlns:local="clr-namespace:MES.Client.BaseData.UserControls"
                     xmlns:hc="https://handyorg.github.io/handycontrol" hc:Dialog.Token="{Binding DialogToken}"
                     xmlns:enum="clr-namespace:MES.Client.Toolkit.Enums;assembly=MES.Client.Toolkit" 
                     xmlns:control="clr-namespace:MES.Client.UICommon.Controls;assembly=MES.Client.UICommon" 
                     xmlns:viewmodels="clr-namespace:MES.Client.BaseData.ViewModels" 
                     xmlns:sync="http://schemas.syncfusion.com/wpf"
                     d:DataContext="{d:DesignInstance Type=viewmodels:<#= entityFileName #>ListViewModel}"
                     mc:Ignorable="d" 
                     d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MES.Client.UICommon;component/Styles/CommStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <hc:DialogContainer>
        <hc:Card>
            <DockPanel TextBlock.FontSize="14">
                <WrapPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="13 5">
                    <TextBlock Text="{Binding Langs[<#= entityFileName #>List],FallbackValue=<#= entityFileName #>List}" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="16" Margin="5 0"/>
                    <Border BorderThickness="1 0 0 0" BorderBrush="{DynamicResource MESBorderBrush}" Margin="20 0"/>
                    <control:Toolbar MenuID="{Binding MenuID}" Langs="{Binding Langs}" AddCommand="{Binding ModifyCommand}" EnableOrDisableCommand="{Binding EnabledCommand}"/>
                </WrapPanel>
                <WrapPanel Margin="5 0" Orientation="Horizontal" DockPanel.Dock="Top">
                    <hc:TextBox Margin="13 5" 
                                MinWidth="250" 
                                Text="{Binding SearchParameter.GroupName}"
                                hc:InfoElement.Title="{Binding Langs[GroupName],FallbackValue=GroupName}" 
                                hc:InfoElement.TitleWidth="65" 
                                hc:InfoElement.Placeholder="{Binding Langs[PleaseEnter]}"
                                hc:InfoElement.TitlePlacement="Left"/>
                    <hc:ComboBox Margin="13 5" 
                                 MinWidth="200" 
                                 DisplayMemberPath="Label"
                                 SelectedValuePath="Value"
                                 SelectedValue="{Binding SearchParameter.IsEnabled}"
                                 ItemsSource="{Binding EnabledStatusList}"
                                 hc:InfoElement.Title="{Binding Langs[IsEnabled],FallbackValue=IsEnabled}" 
                                 hc:InfoElement.TitleWidth="75" 
                                 hc:InfoElement.Placeholder="{Binding Langs[PleaseSelect]}"
                                 hc:InfoElement.TitlePlacement="Left"/>
                    <control:IconButton Margin="16 0 0 0"
                                        Icon="&#xe617;" 
                                        FontSize="14" 
                                        StrText="{Binding Langs[Search]}"
                                        Command="{Binding SearchCommand}"
                                        Visibility="{Binding MenuID,Converter={StaticResource getPermissonToVisibilityConverter},ConverterParameter={x:Static enum:PermissonEnum.Query }}"/>
                </WrapPanel>
                <control:YLHPagination Margin="10 5"
                                       DockPanel.Dock="Bottom"
                                       PageIndex="{Binding PageIndex,Mode=TwoWay}" 
                                       PageSize="{Binding PageSize,Mode=TwoWay}"
                                       TotalCount="{Binding TotalCount,Mode=TwoWay}"  
                                       TotalPages="{Binding TotalPages,Mode=TwoWay}"/>
                <!--列表-->
                <control:MESSfDataGrid Margin="10 0 10 5" 
                                       RowHeight="30"
                                       Langs="{Binding Langs}" 
                                       MenuID="{Binding MenuID}" 
                                       Token="{Binding DialogToken}"
                                       EditCommand="{Binding ModifyCommand}" 
                                       DeleteCommand="{Binding DeleteCommand}" 
                                       ItemsSource="{Binding DataList}"
                                       SelectedItem="{Binding SelectedItem}"
                                       SolTypeName="BaseData"
                                       IsImport="{Binding MenuID,Converter={StaticResource getPermissonToBoolConverter},ConverterParameter={x:Static enum:PermissonEnum.Import }}"
                                       IsExport="{Binding MenuID,Converter={StaticResource getPermissonToBoolConverter},ConverterParameter={x:Static enum:PermissonEnum.Export }}"
                                       IsDel="{Binding MenuID,Converter={StaticResource getPermissonToBoolConverter},ConverterParameter={x:Static enum:PermissonEnum.Delete }}"
                                       IsEdit="{Binding MenuID,Converter={StaticResource getPermissonToBoolConverter},ConverterParameter={x:Static enum:PermissonEnum.Modify }}"
                                       IsDetail="False">
                    <control:MESSfDataGrid.Columns>
                        <sync:GridTextColumn MappingName="GroupName" HeaderText="GroupName" IsHidden="False"/>
                        <sync:GridTextColumn MappingName="StageName" HeaderText="StageName" IsHidden="False"/>
                        <sync:GridTextColumn MappingName="Remark" HeaderText="Remark" IsHidden="False"/>
                        <sync:GridTextColumn MappingName="IsEnabled" HeaderText="IsEnabled" IsHidden="False"/>
                        <sync:GridTextColumn MappingName="CreateUser" HeaderText="CreateUser" IsHidden="False"/>
                        <sync:GridDateTimeColumn MappingName="CreateTime" HeaderText="CreateTime" CustomPattern="yyyy-MM-dd HH:mm:ss" Pattern="CustomPattern" IsHidden="False"/>
                        <sync:GridTextColumn MappingName="UpdateUser" HeaderText="UpdateUser" IsHidden="False"/>
                        <sync:GridDateTimeColumn MappingName="UpdateTime" HeaderText="UpdateTime" CustomPattern="yyyy-MM-dd HH:mm:ss" Pattern="CustomPattern" IsHidden="False"/>
                    </control:MESSfDataGrid.Columns>
                </control:MESSfDataGrid>
            </DockPanel>
        </hc:Card>
    </hc:DialogContainer>
</comm:UserControlExt>

