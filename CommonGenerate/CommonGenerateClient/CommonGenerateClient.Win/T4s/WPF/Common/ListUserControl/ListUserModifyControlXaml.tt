<#@ template debug="false" hostspecific="true" language="C#" #>

<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ assembly name="Utility.dll" #>
<#@ import namespace="CommonGenerateClient.Resource.Models.WebAPI" #>
<#@ import namespace="Utility.DB" #>
<#@ import namespace="Utility.Common" #>
<#
    //System.Diagnostics.Debugger.Launch();

    string modelConfigStr=Host.ResolveParameterValue(null, null, "ParameterName");
    //string testParameter=Host.ResolveParameterValue(null, null, "TestParameterName");
    //modelConfigStr=System.Web.HttpUtility.UrlDecode(modelConfigStr);


    modelConfigStr=modelConfigStr.Replace(@"\\",@"\").Replace("\"","");

    var pathByte=Convert.FromBase64String(modelConfigStr);
    modelConfigStr=System.Text.Encoding.UTF8.GetString(pathByte);

    string json= File.ReadAllText(modelConfigStr);
    var allModel=JsonConvert.DeserializeObject<Dictionary<string, InfrastructModel>>(json);


    InfrastructModel dataConfig=allModel["ParameterName"];

    GenerateEx ex=new GenerateEx(dataConfig.Config.DBType);
    var entityFieldStr = ex.GenerateTable( dataConfig.Config.Columns, true, false);
    var dtoFieldStr = ex.GenerateTable( dataConfig.Config.Columns, false, false,true);
    var dtoFieldWithoutPrimaryKeyStr = ex.GenerateTable( dataConfig.Config.Columns, false, false,true,true);

    string baseNamespaceName="MES.Server."+dataConfig.Config.BaseNamespaceName; //基础名称空间
    

    string entityNamespace= baseNamespaceName+".Domain.Entity"; //实体名称空间
    string repositoryNamespaceName = baseNamespaceName+".Infrastruct.Repository"; //仓储名称空间
    string iRepositoryNamespaceName = baseNamespaceName+".Domain.IRepository"; //仓储接口名称空间
    string serviceNamespaceName = baseNamespaceName+".Application.Service"; //服务名称空间
    string iServiceNameSpaceName = baseNamespaceName+".Application.IService"; //服务接口名称空间
    string controllerNameSpaceName = baseNamespaceName+".Controllers";//控制器名称空间
    string dtoInNameSpaceName = baseNamespaceName+".Domain.Dto.InDto";//dto名称空间
    string dtoOutNameSpaceName = baseNamespaceName+".Domain.Dto.OutDto";//dto名称空间


    bool isBaseRepository=true; //是否生成基础仓储模型

    string tableDesc= dataConfig.Config.TableDesc??"";//数据库注释
    string tableName= dataConfig.Config.TableName;//数据库表名称
    string entityFileName=dataConfig.Config.EntityName; //实体基本名称


    string entityName=entityFileName+"Entity"; //实体文件名称
    string repositoryName=entityFileName+"Repository"; //仓储名称
    string iRepositoryName="I"+repositoryName; //仓储基类
    string serviceName= entityFileName+"Service"; //服务名称
    string serviceParameter=Char.ToLower(serviceName[0])+ serviceName.Substring(1);//service参数名称


    string iServiceName="I"+serviceName; //服务接口名称
    string controllerName= entityFileName+"Controller";//控制器名称
    string inDtoName= entityFileName + "InDto";
    string searchInDtoName=entityFileName+"SearchInDto"; //动态查询
    string searchOutDtoName=entityFileName+"SearchOutDto"; //动态查询
    string createInDtoName=entityFileName+"CreateInDto"; //创建(不包含主键字段)

    string fileTitle=@$"
// *
// * 此代码由生成工具生成
// * 工具版本:V1.0.0.0
// * 文件版本:V1.0.0.0
// * Date:{DateTime.Now.ToString("yyyy:MM:dd HH:mm:ss")}
// *
";


    string primaryKeyName=ex.GetPrimaryKeyName(dataConfig.Config.Columns);

    string savePath=dataConfig.Config.SavePath;

    //var manager = Manager.Create(Host, GenerationEnvironment);


    //manager.StartNewFile(entityName + ".cs",savePath + "/WebAPI/Entities");
#>
<comm:UserControlExt xmlns:comm="clr-namespace:MES.Client.UICommon.Comm;assembly=MES.Client.UICommon"
                     x:Class="MES.Client.BaseData.UserControls.Modify<#= entityFileName #>"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                     xmlns:hc="https://handyorg.github.io/handycontrol" 
                     xmlns:local="clr-namespace:MES.Client.BaseData.ViewModels" 
                     d:DataContext="{d:DesignInstance Type=local:Modify<#= entityFileName #>ViewModel}"
                     mc:Ignorable="d" 
                     d:DesignHeight="250" d:DesignWidth="450">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MES.Client.UICommon;component/Styles/CommStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <hc:DialogContainer>
        <!--<Border CornerRadius="3" Background="{DynamicResource DialogPrimaryBrush}">
        </Border>-->
        <DockPanel TextBlock.Foreground="{DynamicResource DefaultFontColorBrush}" Background="{DynamicResource DialogPrimaryBrush}" TextBlock.FontSize="14">
            <!--标题-->
            <Border Margin="0 0 0 5" DockPanel.Dock="Top" 
                    CornerRadius="4 4 0 0" 
                    BorderThickness="0" 
                    Background="{DynamicResource DialogTitleBrush}"
                    TextBlock.Foreground="{DynamicResource DefaultFontColorBrush}">
                <Grid Margin="0 10">
                    <TextBlock Text="{Binding Title}" FontWeight="SemiBold" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20 0 0 0"/>
                    <Button Style="{StaticResource CloseButtonStyle}"/>
                </Grid>
            </Border>
            <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="13 0">
                <Button Margin="10" 
                        Width="130" 
                        DockPanel.Dock="Right" 
                        Foreground="White" 
                        Background="{DynamicResource AddBtnBrush}" 
                        BorderBrush="{DynamicResource AddBtnBrush}" 
                        Content="{Binding Langs[Confirm]}"
                        Command="{Binding SaveCommand}"/>
                <Button Margin="10" 
                        Width="130" 
                        DockPanel.Dock="Right"
                        Content="{Binding Langs[Cancel]}" 
                        Command="hc:ControlCommands.Close"/>
            </DockPanel>
            <UniformGrid Margin="5" Columns="1" TextBlock.FontSize="14">
                <hc:TextBox Margin="10 0 10 10" 
                            Text="{Binding SelectData.GroupName}"
                            hc:InfoElement.TitlePlacement="Left"  
                            hc:InfoElement.TitleWidth="100"
                            hc:InfoElement.Placeholder="{Binding Langs[PleaseEnter]}" 
                            hc:InfoElement.Title="{Binding Langs[GroupName],FallbackValue=GroupName}"/>
                <hc:TextBox Margin="10 0 10 10" 
                            Text="{Binding SelectData.Remark}"
                            hc:InfoElement.TitlePlacement="Left"  
                            hc:InfoElement.TitleWidth="100"
                            hc:InfoElement.Placeholder="{Binding Langs[PleaseEnter]}" 
                            hc:InfoElement.Title="{Binding Langs[Remark],FallbackValue=Remark}"/>
            </UniformGrid>
        </DockPanel>
    </hc:DialogContainer>
</comm:UserControlExt>
